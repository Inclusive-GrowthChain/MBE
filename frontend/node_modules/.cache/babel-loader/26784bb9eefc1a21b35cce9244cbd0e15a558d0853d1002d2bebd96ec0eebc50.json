{"ast":null,"code":"import endPoints from \"../utils/endPoints\";\nimport sendApiReq from \"../utils/sendApiReq\";\nexport async function getInvestorLists(onSuccess) {\n  try {\n    const res = await sendApiReq({});\n    onSuccess(res.message);\n  } catch (error) {\n    console.log(error);\n  }\n}\nexport async function getUserDetails(MbeId, onSuccess) {\n  try {\n    const res = await sendApiReq({\n      url: `${endPoints.userDetail}?MbeId=${MbeId}`\n    });\n    console.log(res);\n    // onSuccess(res)\n  } catch (error) {\n    console.log(error);\n  }\n}\nexport async function getBondholding(data, onSuccess) {\n  try {\n    const payload = await sendApiReq({\n      url: endPoints.fetchTokenHoldings,\n      params: data\n    });\n    console.log(payload);\n    if (payload.status === 200) onSuccess(payload.message);\n  } catch (error) {\n    console.log(error);\n  }\n}\nexport async function getTokenHoldings(data, onSuccess) {\n  try {\n    const payload = await sendApiReq({\n      url: endPoints.fetchTokenHoldings,\n      params: data\n    });\n    console.log(payload);\n    if (payload.status === 200) onSuccess(payload.message);\n  } catch (error) {\n    console.log(error);\n  }\n}\nexport async function getTransactions(onSuccess) {\n  try {\n    const payload = await sendApiReq({\n      url: endPoints.transactions\n    });\n    console.log(payload);\n    if (payload.status === 200) onSuccess(payload.message);\n  } catch (error) {\n    console.log(error);\n  }\n}\nexport async function getPurchaseLog(onSuccess) {\n  try {\n    const res = await sendApiReq({\n      url: endPoints.purchaseLog\n    });\n    console.log(res);\n    if (res.status === 200) {\n      let final = res.message.reduce((prev, curr) => {\n        let isPresent = prev.find(p => p.Isin === curr.Isin);\n        if (isPresent) {\n          isPresent.TradeValue = Number(isPresent.TradeValue) + Number(curr.TradeValue);\n          isPresent.NumOfToken = Number(isPresent.NumOfToken) + Number(curr.NumOfToken);\n        } else {\n          prev.push(curr);\n        }\n        return prev;\n      }, []);\n      onSuccess(final);\n    }\n  } catch (error) {\n    console.log(error);\n  }\n}\nexport async function getMarket(onSuccess) {\n  try {\n    const payload = await sendApiReq({\n      url: endPoints.fetchMarket\n    });\n    console.log(payload);\n    if (payload.status === 200) onSuccess(payload.message);\n  } catch (error) {\n    console.log(error);\n  }\n}\nexport async function fetchAllUserSellTransactions(onSuccess) {\n  try {\n    const payload = await sendApiReq({\n      url: endPoints.fetchAllUserSellTransactions\n    });\n    console.log(payload);\n    if (payload.status === 200) onSuccess(payload.message);\n  } catch (error) {\n    console.log(error);\n  }\n}\nexport async function fetchAllUserBuyTransactions(onSuccess) {\n  try {\n    const payload = await sendApiReq({\n      url: endPoints.fetchAllUserBuyTransactions\n    });\n    console.log(payload);\n    if (payload.status === 200) onSuccess(payload.message);\n  } catch (error) {\n    console.log(error);\n  }\n}\nexport async function fetchSingleUserSellTransactions(data, onSuccess) {\n  try {\n    const payload = await sendApiReq({\n      url: endPoints.fetchSingleUserSellTransactions,\n      params: data\n    });\n    console.log(payload);\n    if (payload.status === 200) onSuccess(payload.message);\n  } catch (error) {\n    console.log(error);\n  }\n}\nexport async function fetchSingleUserBuyTransactions(data, onSuccess) {\n  try {\n    const payload = await sendApiReq({\n      url: endPoints.fetchSingleUserBuyTransactions,\n      params: data\n    });\n    console.log(payload);\n    if (payload.status === 200) onSuccess(payload.message);\n  } catch (error) {\n    console.log(error);\n  }\n}\nexport async function fetchAllTransactions(onSuccess) {\n  try {\n    // const payload = await sendApiReq({\n    //   url: endPoints.transactions,\n    // })\n\n    const res1 = await sendApiReq({\n      url: endPoints.fetchAllUserSellTransactions\n    });\n    const res2 = await sendApiReq({\n      url: endPoints.fetchAllUserBuyTransactions\n    });\n\n    // if (payload.status === 200) {\n    //   let final = []\n\n    //   final.push(...payload.message)\n\n    //   if (res1.message) {\n    //     if (Array.isArray(res1.message)) {\n    //       final.push(...res1.message)\n    //     } else {\n    //       final.push(res1.message)\n    //     }\n    //   }\n\n    //   if (res2.message) {\n    //     if (Array.isArray(res2.message)) {\n    //       final.push(...res2.message)\n    //     } else {\n    //       final.push(res2.message)\n    //     }\n    //   }\n\n    //   onSuccess(final)\n    // }\n\n    if (res1.status === 200) {\n      let final = [];\n      final.push(...res1.message);\n      if (res2.message) {\n        if (Array.isArray(res2.message)) {\n          final.push(...res2.message);\n        } else {\n          final.push(res2.message);\n        }\n      }\n      onSuccess(final);\n    }\n  } catch (error) {\n    console.log(error);\n  }\n}","map":{"version":3,"names":["endPoints","sendApiReq","getInvestorLists","onSuccess","res","message","error","console","log","getUserDetails","MbeId","url","userDetail","getBondholding","data","payload","fetchTokenHoldings","params","status","getTokenHoldings","getTransactions","transactions","getPurchaseLog","purchaseLog","final","reduce","prev","curr","isPresent","find","p","Isin","TradeValue","Number","NumOfToken","push","getMarket","fetchMarket","fetchAllUserSellTransactions","fetchAllUserBuyTransactions","fetchSingleUserSellTransactions","fetchSingleUserBuyTransactions","fetchAllTransactions","res1","res2","Array","isArray"],"sources":["/home/ravi/npciV4/IGC-NPCI-HACKATHON/frontend/src/apis/custodianApis.js"],"sourcesContent":["import endPoints from \"../utils/endPoints\";\nimport sendApiReq from \"../utils/sendApiReq\";\n\nexport async function getInvestorLists(onSuccess) {\n  try {\n    const res = await sendApiReq({})\n    onSuccess(res.message)\n\n  } catch (error) {\n    console.log(error)\n  }\n}\n\nexport async function getUserDetails(MbeId, onSuccess) {\n  try {\n    const res = await sendApiReq({\n      url: `${endPoints.userDetail}?MbeId=${MbeId}`,\n    })\n\n    console.log(res)\n    // onSuccess(res)\n\n  } catch (error) {\n    console.log(error)\n  }\n}\n\nexport async function getBondholding(data, onSuccess) {\n  try {\n    const payload = await sendApiReq({\n      url: endPoints.fetchTokenHoldings,\n      params: data\n    })\n    console.log(payload)\n    if (payload.status === 200)\n      onSuccess(payload.message)\n  } catch (error) {\n    console.log(error)\n  }\n}\n\nexport async function getTokenHoldings(data, onSuccess) {\n  try {\n    const payload = await sendApiReq({\n      url: endPoints.fetchTokenHoldings,\n      params: data\n    })\n    console.log(payload)\n    if (payload.status === 200)\n      onSuccess(payload.message)\n  } catch (error) {\n    console.log(error)\n  }\n}\n\nexport async function getTransactions(onSuccess) {\n  try {\n    const payload = await sendApiReq({\n      url: endPoints.transactions,\n    })\n    console.log(payload)\n    if (payload.status === 200)\n      onSuccess(payload.message)\n  } catch (error) {\n    console.log(error)\n  }\n}\n\nexport async function getPurchaseLog(onSuccess) {\n  try {\n    const res = await sendApiReq({\n      url: endPoints.purchaseLog,\n    })\n\n    console.log(res)\n    if (res.status === 200) {\n      let final = res.message.reduce((prev, curr) => {\n        let isPresent = prev.find(p => p.Isin === curr.Isin)\n\n        if (isPresent) {\n          isPresent.TradeValue = Number(isPresent.TradeValue) + Number(curr.TradeValue)\n          isPresent.NumOfToken = Number(isPresent.NumOfToken) + Number(curr.NumOfToken)\n\n        } else {\n          prev.push(curr)\n        }\n\n        return prev\n      }, [])\n\n      onSuccess(final)\n    }\n\n  } catch (error) {\n    console.log(error)\n  }\n}\n\nexport async function getMarket(onSuccess) {\n  try {\n    const payload = await sendApiReq({\n      url: endPoints.fetchMarket,\n    })\n    console.log(payload)\n    if (payload.status === 200)\n      onSuccess(payload.message)\n  } catch (error) {\n    console.log(error)\n  }\n}\n\nexport async function fetchAllUserSellTransactions(onSuccess) {\n  try {\n    const payload = await sendApiReq({\n      url: endPoints.fetchAllUserSellTransactions,\n    })\n    console.log(payload)\n    if (payload.status === 200)\n      onSuccess(payload.message)\n  } catch (error) {\n    console.log(error)\n  }\n}\n\nexport async function fetchAllUserBuyTransactions(onSuccess) {\n  try {\n    const payload = await sendApiReq({\n      url: endPoints.fetchAllUserBuyTransactions,\n    })\n    console.log(payload)\n    if (payload.status === 200)\n      onSuccess(payload.message)\n  } catch (error) {\n    console.log(error)\n  }\n}\n\nexport async function fetchSingleUserSellTransactions(data, onSuccess) {\n  try {\n    const payload = await sendApiReq({\n      url: endPoints.fetchSingleUserSellTransactions,\n      params: data\n    })\n    console.log(payload)\n    if (payload.status === 200)\n      onSuccess(payload.message)\n  } catch (error) {\n    console.log(error)\n  }\n}\n\nexport async function fetchSingleUserBuyTransactions(data, onSuccess) {\n  try {\n    const payload = await sendApiReq({\n      url: endPoints.fetchSingleUserBuyTransactions,\n      params: data\n    })\n    console.log(payload)\n    if (payload.status === 200)\n      onSuccess(payload.message)\n  } catch (error) {\n    console.log(error)\n  }\n}\n\nexport async function fetchAllTransactions(onSuccess) {\n  try {\n    // const payload = await sendApiReq({\n    //   url: endPoints.transactions,\n    // })\n\n    const res1 = await sendApiReq({\n      url: endPoints.fetchAllUserSellTransactions,\n    })\n\n    const res2 = await sendApiReq({\n      url: endPoints.fetchAllUserBuyTransactions,\n    })\n\n    // if (payload.status === 200) {\n    //   let final = []\n\n    //   final.push(...payload.message)\n\n    //   if (res1.message) {\n    //     if (Array.isArray(res1.message)) {\n    //       final.push(...res1.message)\n    //     } else {\n    //       final.push(res1.message)\n    //     }\n    //   }\n\n    //   if (res2.message) {\n    //     if (Array.isArray(res2.message)) {\n    //       final.push(...res2.message)\n    //     } else {\n    //       final.push(res2.message)\n    //     }\n    //   }\n\n    //   onSuccess(final)\n    // }\n\n    if (res1.status === 200) {\n      let final = []\n\n      final.push(...res1.message)\n\n      if (res2.message) {\n        if (Array.isArray(res2.message)) {\n          final.push(...res2.message)\n        } else {\n          final.push(res2.message)\n        }\n      }\n\n      onSuccess(final)\n    }\n  } catch (error) {\n    console.log(error)\n  }\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}